---
import { homeTag as HomeTagList } from '@src/components/widgets/homeTag/index'
---

<div class="md:block hidden">
    <div class="inline-flex gap-2">
        {
            HomeTagList.map(item => {
                return (
                        <a href={item.link ? `${item.link}` : ''} class="flex gap-1 items-center cursor-pointer hover:underline hover:underline-offset-4 transition-[underline] duration-300 ease-in-out delay-100">
                            {
                                item.icon && <span set:html={item.icon} class="w-3 h-3"></span>
                            }
                            <span>{item.name}</span>
                        </a>
                )
            })
        }
    </div>
</div>
<div class="md:hidden block">
    <div class="text-4xl cursor-pointer nav-mobile-custom">
        <svg xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 48 48"><g fill="none" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M7.94971 11.9497H39.9497"/><path d="M7.94971 23.9497H39.9497"/><path d="M7.94971 35.9497H39.9497"/></g></svg>
    </div>
</div>

<div class="nav-mobile-show fixed w-screen h-screen bg-white/30 backdrop-blur-md z-50 inset-0 hidden">
    <div class="flex flex-col items-center show-navlist">
        {
            HomeTagList.map(item => {
                return (
                    <div class="flex-1 flex justify-center items-center text-5xl my-3">
                        <a href={item.link ? `${item.link}` : ''} class="flex gap-1 items-center cursor-pointer underline">
                        {/* {
                        item.icon && <span set:html={item.icon} class="w-3 h-3"></span>
                        } */}
                            <span>{item.name}</span>
                        </a>
                    </div>
                )
            })
        }
        <div class="flex-1 flex justify-center items-center text-5xl my-3 animate-spin nav-close">
            <svg xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 24 24"><path fill="currentColor" d="m6.4 18.308l-.708-.708l5.6-5.6l-5.6-5.6l.708-.708l5.6 5.6l5.6-5.6l.708.708l-5.6 5.6l5.6 5.6l-.708.708l-5.6-5.6z"/></svg>
        </div>
    </div>
</div>


<script>
    document.addEventListener("astro:page-load", () => {
        const navMobileCustom = document.querySelector('.nav-mobile-custom')
        const navMoileShow= document.querySelector('.nav-mobile-show')
        const navClose = document.querySelector('.nav-close')
        const showNavlist = document.querySelector('.show-navlist')

        const clearMaskScrollHandler = (dom: HTMLElement) => {
            dom.style.overflow = 'hidden'
        }
        const showMaskScrollHandler = (dom: HTMLElement) => {
            dom.style.overflow = 'auto'
        }
        const maskShowBodyHandler = (dom: HTMLElement) => {
            if (!dom) return
            document.body.append(dom)
            dom.style.display = 'block'
            clearMaskScrollHandler(document.body)
        }

        const maskHiddenBodyHandler = (dom: HTMLElement) => {
            if (!dom) return
            dom.style.display = 'none'
            showMaskScrollHandler(document.body)
        }

        navMobileCustom?.addEventListener("click", () => {
            maskShowBodyHandler(navMoileShow as HTMLElement)
        }, {passive: true})

        navClose?.addEventListener('click', () => {
            maskHiddenBodyHandler(navMoileShow as HTMLElement)
        }, {passive: true})

        navMoileShow?.addEventListener('click', (event) => {
            if (!showNavlist) return
            if (!showNavlist.contains(event.target as Node)) {
                maskHiddenBodyHandler(navMoileShow as HTMLElement)
            }
        }, {passive: true})
    })
</script>