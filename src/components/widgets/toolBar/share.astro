---
import type {shareData} from '@src/components/widgets/toolBar/interface'
interface Props {
    fontSize: object,
    shareData?: shareData
}
const props = Astro.props
const { fontSize, shareData } = props
---
<a href="#" class="cursor-pointer tool-share opacity-80 hover:opacity-100" data-info={JSON.stringify(shareData)} title="分享">
    <svg xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 24 24" {...fontSize}>
        <path fill="currentColor" d="M12.223 11.075a.5.5 0 0 0 .7.71l7-7v3.58a.51.51 0 0 0 .5.5a.5.5 0 0 0 .5-.5v-4.79a.5.5 0 0 0-.5-.5h-4.79a.5.5 0 0 0 0 1h3.58Z" />
        <path fill="currentColor" d="M17.876 20.926H6.124a3.053 3.053 0 0 1-3.05-3.05V6.124a3.053 3.053 0 0 1 3.05-3.05h6.028a.5.5 0 0 1 0 1H6.124a2.053 2.053 0 0 0-2.05 2.05v11.752a2.053 2.053 0 0 0 2.05 2.05h11.752a2.053 2.053 0 0 0 2.05-2.05v-6.027a.5.5 0 0 1 1 0v6.027a3.053 3.053 0 0 1-3.05 3.05" />
    </svg>
</a>

<script>
    
    document.addEventListener('astro:page-load', () => {
        clickShareHandler()
    })

    function clickShareHandler () {
        const toolShare = document.querySelector('.tool-share')
        if (!toolShare) return
        if (navigator.share) {
            const getShareDataStr = toolShare.getAttribute('data-info')
            if (!getShareDataStr) return
            const getShareData = JSON.parse(getShareDataStr) || ''
            toolShare.addEventListener('click', () => {
                const data = {
                    title: getShareData.title || '',
                    text: getShareData.text,
                    url: getShareData.url
                }
                navigator.share(data)
                .then(() => {
                    console.log('Shared successfully')
                })
                .catch((err) => {
                    console.error(err)
                })
            })
        } else {
            (toolShare as HTMLElement).style.display = 'none'
        }
        
    }
</script>