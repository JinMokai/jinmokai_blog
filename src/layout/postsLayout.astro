---
import BaseLayout from '@src/layout/baseLayout.astro'
import Header from '@src/components/blog/Header.astro'

export interface Props {
  title?: string
  clean?: boolean
  noShowHead?: boolean
}
const { title, clean, noShowHead } = Astro.props
---

<BaseLayout title={title ? title : ''}>
    {
        !noShowHead && (
            <Header />
        )
    }
    <div class:list={clean ? '' :'pt-24'}>
        <slot />
    </div>
</BaseLayout>

<style is:global>
/* 
  use default load background 
  You can see that using JavaScript to clear the animation class names of img parent elements
*/
img, iframe:not(.giscus-frame) {
      background: linear-gradient(99deg, rgba(143,157,159,1) 0%, rgba(240,240,240,1) 83%);
    }
     /* Hide scrollbar for Chrome, Safari and Opera */
     /* :where(html,body):-webkit-scrollbar {
      display: none;
    } */

    /* Hide scrollbar for IE, Edge and Firefox */
    /* html,body {
      -ms-overflow-style: none;  
      scrollbar-width: none;  
    } */
    img.error {
  display: inline-block;
  transform: scale(1);
}
img.error::before {
  content: '';
  position: absolute;
  left: 0; top: 0;
  width: 100%; height: 100%;
  background: #f5f5f5 url("data:image/svg+xml,%3Csvg class='icon' viewBox='0 0 1024 1024' xmlns='http://www.w3.org/2000/svg' width='200' height='200'%3E%3Cpath d='M304.128 456.192c48.64 0 88.064-39.424 88.064-88.064s-39.424-88.064-88.064-88.064-88.064 39.424-88.064 88.064 39.424 88.064 88.064 88.064zm0-116.224c15.36 0 28.16 12.288 28.16 28.16s-12.288 28.16-28.16 28.16-28.16-12.288-28.16-28.16 12.288-28.16 28.16-28.16z' fill='%23e6e6e6'/%3E%3Cpath d='M887.296 159.744H136.704C96.768 159.744 64 192 64 232.448v559.104c0 39.936 32.256 72.704 72.704 72.704h198.144L500.224 688.64l-36.352-222.72 162.304-130.56-61.44 143.872 92.672 214.016-105.472 171.008h335.36C927.232 864.256 960 832 960 791.552V232.448c0-39.936-32.256-72.704-72.704-72.704zm-138.752 71.68v.512H857.6c16.384 0 30.208 13.312 30.208 30.208v399.872L673.28 408.064l75.264-176.64zM304.64 792.064H165.888c-16.384 0-30.208-13.312-30.208-30.208v-9.728l138.752-164.352 104.96 124.416-74.752 79.872zm81.92-355.84l37.376 228.864-.512.512-142.848-169.984c-3.072-3.584-9.216-3.584-12.288 0L135.68 652.8V262.144c0-16.384 13.312-30.208 30.208-30.208h474.624L386.56 436.224zm501.248 325.632c0 16.896-13.312 30.208-29.696 30.208H680.96l57.344-93.184-87.552-202.24 7.168-7.68 229.888 272.896z' fill='%23e6e6e6'/%3E%3C/svg%3E") no-repeat center / 50% 50%;
  color: transparent;
}
img.error::after {
  content: attr(alt);
  position: absolute;
  left: 0; bottom: 0;
  width: 100%;
  line-height: 2;
  background-color: rgba(0,0,0,.5);
  color: white;
  font-size: 12px;
  text-align: center;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
</style>

<script data-astro-rerun is:inline>

(() => {
  document.addEventListener('astro:page-load', () => {
    const handleImageLoad = (img) => {
      const clearBackground = (img) => {
        img.style.background = "none";
        const imgF = img.closest('.animate-pulse');
        if (imgF) {
          imgF.classList.remove('animate-pulse');
        }
      };

      if (img.complete) {
        clearBackground(img);
      } else {
        img.addEventListener("load", () => clearBackground(img));
        img.addEventListener("error", () => {
          img.classList.add('error');
          console.error(`Image failed to load: ${img.src}`);
        });
      }
    };
    document.querySelectorAll("img").forEach(handleImageLoad);
  });

  // document.addEventListener('DOMContentLoaded', () => {
    const handleImageLoad = (img) => {
      const clearBackground = (img) => {
        img.style.background = "none";
        const imgF = img.closest('.animate-pulse');
        if (imgF) {
          imgF.classList.remove('animate-pulse');
        }
      };

      if (img.complete) {
        clearBackground(img);
      } else {
        img.addEventListener("load", () => clearBackground(img));
        img.addEventListener("error", () => {
          console.error(`Image failed to load: ${img.src}`);
        });
      }
    };
    document.querySelectorAll("img").forEach(handleImageLoad);
  // });

  document.addEventListener('astro:before-swap', (ev) => {
    const handleImageLoad = (img) => {
      const clearBackground = (img) => {
        img.style.background = "none";
        const imgF = img.closest('.animate-pulse');
        if (imgF) {
          imgF.classList.remove('animate-pulse');
        }
      };

      if (img.complete) {
        clearBackground(img);
      } else {
        img.addEventListener("load", () => clearBackground(img));
        img.addEventListener("error", () => {
          img.classList.add('error');
          console.error(`Image failed to load: ${img.src}`);
        });
      }
    };
    ev.newDocument.querySelectorAll("img").forEach(handleImageLoad)
  })
})()
</script>